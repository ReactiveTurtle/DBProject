// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20210530173833_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.DBSequenceHiLoForInvoice", "'DBSequenceHiLoForInvoice', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.DBSequenceHiLoForManufacturer", "'DBSequenceHiLoForManufacturer', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.DBSequenceHiLoForProduct", "'DBSequenceHiLoForProduct', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("Relational:Sequence:.DBSequenceHiLoForSigner", "'DBSequenceHiLoForSigner', '', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.InvoiceModel.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DBSequenceHiLoForInvoice")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<DateTime>("PreparationDate");

                    b.Property<string>("Signer")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Domain.InvoiceModel.ManufacturerPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DBSequenceHiLoForManufacturer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("Domain.InvoiceModel.ProductPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DBSequenceHiLoForProduct")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Domain.InvoiceModel.SignerPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "DBSequenceHiLoForSigner")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.HasKey("Id");

                    b.ToTable("Signers");
                });

            modelBuilder.Entity("Domain.InvoiceModel.ManufacturerPreset", b =>
                {
                    b.OwnsOne("Domain.Shared.Manufacturer", "Manufacturer", b1 =>
                        {
                            b1.Property<int>("ManufacturerPresetId");

                            b1.Property<string>("Address")
                                .IsRequired();

                            b1.Property<string>("Email");

                            b1.Property<string>("ManagerFullname")
                                .IsRequired();

                            b1.Property<string>("Name")
                                .IsRequired();

                            b1.Property<string>("PhoneNumber")
                                .IsRequired();

                            b1.HasKey("ManufacturerPresetId");

                            b1.ToTable("Manufacturers");

                            b1.HasOne("Domain.InvoiceModel.ManufacturerPreset")
                                .WithOne("Manufacturer")
                                .HasForeignKey("Domain.Shared.Manufacturer", "ManufacturerPresetId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Domain.InvoiceModel.ProductPreset", b =>
                {
                    b.OwnsOne("Domain.Shared.Product", "Product", b1 =>
                        {
                            b1.Property<int>("ProductPresetId");

                            b1.Property<int>("CurrencyType");

                            b1.Property<DateTime>("ExpirationDateTime");

                            b1.Property<DateTime>("ManufactureDateTime");

                            b1.Property<string>("Manufacturer")
                                .IsRequired();

                            b1.Property<string>("Name")
                                .IsRequired();

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(19, 4)");

                            b1.HasKey("ProductPresetId");

                            b1.ToTable("Products");

                            b1.HasOne("Domain.InvoiceModel.ProductPreset")
                                .WithOne("Product")
                                .HasForeignKey("Domain.Shared.Product", "ProductPresetId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Domain.InvoiceModel.SignerPreset", b =>
                {
                    b.OwnsOne("Domain.Shared.Signer", "Signer", b1 =>
                        {
                            b1.Property<int>("SignerPresetId");

                            b1.Property<string>("Address")
                                .IsRequired();

                            b1.Property<string>("Fullname")
                                .IsRequired();

                            b1.Property<string>("PhoneNumber")
                                .IsRequired();

                            b1.Property<string>("Position")
                                .IsRequired();

                            b1.HasKey("SignerPresetId");

                            b1.ToTable("Signers");

                            b1.HasOne("Domain.InvoiceModel.SignerPreset")
                                .WithOne("Signer")
                                .HasForeignKey("Domain.Shared.Signer", "SignerPresetId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
